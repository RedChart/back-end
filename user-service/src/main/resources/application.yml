server:
  port: 8082
spring:
  config:
    import: classpath:application-key.yml
  application:
    name: user-service

  datasource:
    url: jdbc:mysql://localhost:3307/redchart_user_service
    #    url: jdbc:mysql://localhost:33076/redchart_user_serviceser_service
    username: ${SPRING_DATASOURCE_USERNAME}
    password: ${DB_PASSWORD}
    driver-class-name: com.mysql.cj.jdbc.Driver
  data:
    redis:
      host: ${REDIS_HOST}
      #      host: localhost
      port: ${REDIS_PORT}
  jpa:
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQLDialect
    cloud:
      compatibility-verifier:
        enabled: false

  security:
    oauth2:
      kakao:
        client-id: ${KAKAO_CLIENT_ID}
        redirect_uri: ${KAKAO_REDIRECT_URL}
        client-secret: ${KAKAO_CLIENT_SECRET}
        authorization-grant-type: ${KAKAO_GRANT_TYPE}
        token-uri: ${KAKAO_TOKEN_URI}
        client-name: Kakao

  kafka:
    bootstrap-servers: localhost:9092
    #    consumer:
    #      group-id: user-service
    #      auto-offset-reset: earliest
    #      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
    #      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer # 키 직렬화 클래스
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer # 값 직렬화 클래스
      acks: all # 메시지 전송 보증 수준
      retries: 3 # 전송 실패 시 재시도 횟수
      linger-ms: 1

  mail:
    host: smtp.gmail.com
    port: 587
    username: ${MAIL_USERNAME}
    password: ${MAIL_PASSWORD}
    properties:
      mail:
        smtp:
          from: ${MAIL_FROM}
          auth: true
          starttls:
            enable: true
            required: true
          connectiontimeout: 5000
          timeout: 5000
          writetimeout: 5000
    auth-code-expiration-millis: 1800000
eureka:
  client:
    service-url:
      defaultZone: http://localhost:8761/eureka
    register-with-eureka: true
    fetch-registry: true
  instance:
    lease-renewal-interval-in-seconds: 10
    lease-expiration-duration-in-seconds: 30

logging:
  level:
    org.apache.kafka: ERROR
    kafka: ERROR

jwt:
  secret: ${JWT_SECRET}

springdoc:
  api-docs:
    path: /api/users/v3/api-docs
  swagger-ui:
    path: /api/users/swagger-ui.html

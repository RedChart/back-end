server:
  port: 8081
spring:
  application:
    name: api-gateway
  main:
    web-application-type: reactive
  autoconfigure:
    exclude:
      - org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration
  cloud:
    gateway:
      routes:

        - id: user-service
          uri: lb://user-service  # Eureka에서 등록된 a-service로 라우팅
          predicates:
            - Path=/api/users/**  # 모든 API 요청을 처리합니다.
#          filters:
#            - name: SecurityConfig
        - id: post-service-swagger
          uri: lb://post-service
          predicates:
            - Path=/api/posts/swagger-ui.html, /api/posts/swagger-ui/**, /api/posts/v3/api-docs/**

        - id: post-service
          uri: lb://post-service  # Eureka에서 등록된 b-service로 라우팅
          predicates:
            - Path=/api/posts/**  # Fallback 경로를 정의합니다.
#          filters:
#            - name: SecurityConfig
eureka:
  client:
    service-url:
      defaultZone: http://localhost:8761/eureka/
    register-with-eureka: true
    fetch-registry: true
  instance:
    lease-renewal-interval-in-seconds: 10
    lease-expiration-duration-in-seconds: 30
springdoc:
  swagger-ui:
    path: /api/posts/swagger-ui.html

jwt:
  secret: 7ae96706cd6e6aade43a3b843bb3317f823ab927b64beb8d45558b3ac29f079dd36afe40f1646af31c334ccbb568cfe64b9e4e54a47aa5a5077796eca1e58075